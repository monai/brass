#!/bin/sh
#
# <%= name %> <%= summary %>
#
# chkconfig: 2345 80 20
#
# description: <%= description %>
# processname: <%= name %>
#
### BEGIN INIT INFO
# Provides: <%= name %>
# Required-Start: $local_fs $remote_fs
# Required-Stop: $local_fs $remote_fs
# Should-Start: $network
# Should-Stop: $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start and stop <%= name %>
# Description: <%= description %>
### END INIT INFO

# Source function library.
. /etc/init.d/functions

exec="<%= daemon.systemTarget %>"
prog="<%= name %>"
<% if ('daemonConfigDir' in locals) { %>
config="<%= daemon.configDir %>"
<% } %>
<% if ('user' in locals) { %>
user="<%= user %>"
<% } else { %>
user="root"
<% } %>

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

pidfile="/var/run/${prog}.pid"
lockfile="/var/lock/subsys/$prog"



start() {
    [ -x $exec ] || exit 5
    <% if ('daemon.configDir' in locals) { %>[ -e $config ] || exit 6<% } %>
    echo -n $"Starting $prog: "
    
    su - $user -c "NODE_ENV=production $exec $config >/dev/null 2>&1 & echo \$! > $pidfile" &&  echo_success || echo_failure
    
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    
    pid=$(cat $pidfile 2>/dev/null)
    kill -15 $pid >/dev/null 2>&1 && echo_success || echo_failure
    
    retval=$?
    echo
    if [ $retval -eq 0 ]; then
        rm -f $pidfile
        rm -f $lockfile
    fi
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    pid=$(cat $pidfile 2>/dev/null)
    
    if $(ps -p $pid >/dev/null 2>&1); then
        echo "$prog (pid  $pid) is running..."
    else
        echo "$prog is stopped"
        
        ispidfile=0
        islockfile=0
        [ -f $pidfile ] && ispidfile=1
        [ -f $lockfile ] && islockfile=1
        
        if [ $ispidfile -eq 1 ] || [ $islockfile -eq 1 ]; then
            rm -f $pidfile
            rm -f $lockfile
        fi
        
        [ $ispidfile -eq 1 ] && return 1
        [ $islockfile -eq 1 ] && return 2
        return 3
    fi
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}



case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
